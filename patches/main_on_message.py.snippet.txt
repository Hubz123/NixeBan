# --- REPLACE YOUR on_message IN main.py WITH THIS ---
@bot.event
async def on_message(message: discord.Message):
    if getattr(message.author, "bot", False):
        return

    # de-dup
    if message.id in STATE.seen_msg_ids:
        await bot.process_commands(message)  # still allow commands
        return
    STATE.seen_msg_ids.add(message.id)

    ch_id = getattr(message.channel, "id", 0) or 0

    # Learning thread: still allow commands before return
    if LEARN_THREAD_ID and ch_id == LEARN_THREAD_ID:
        try:
            async for data in _iter_image_payloads(message):
                h = await image_bytes_to_hash(data)
                if h and h not in STATE.phash_tokens:
                    STATE.phash_tokens.add(h)
                    await _edit_pinned(STATE.phash_tokens)
        except Exception as e:
            logging.getLogger("nixe.discord.handlers_crucial").error("learn-thread error: %r", e)
        finally:
            await bot.process_commands(message)
        return

    # Guard scanning then always process commands
    try:
        match = False
        async for data in _iter_image_payloads(message):
            STATE.images_scanned += 1
            h = await image_bytes_to_hash(data)
            if h and h in STATE.phash_tokens:
                match = True
                break
        if match:
            await _ban_and_delete(message, "phishing image match (pHash)")
    except Exception as e:
        logging.getLogger("nixe.discord.handlers_crucial").error("on_message error: %r", e)
    finally:
        # CRUCIAL: allow prefix commands like !tb to run
        await bot.process_commands(message)
