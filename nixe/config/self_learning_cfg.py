from __future__ import annotations
import os

BAN_BRAND_NAME: str = os.getenv('BAN_BRAND_NAME', 'NIXE')
BAN_DELETE_SECONDS: int = int(os.getenv('BAN_DELETE_SECONDS', '0'))
BAN_DRY_RUN: bool = os.getenv('BAN_DRY_RUN', '0') == '1'
BAN_LOG_CHANNEL_ID: int = int(os.getenv('BAN_LOG_CHANNEL_ID', '0'))
LOG_CHANNEL_ID: int = int(os.getenv('LOG_CHANNEL_ID', '0'))
NIXE_HEALTHZ_PATH: str = os.getenv('NIXE_HEALTHZ_PATH', '/tmp/nixe_healthz')
NIXE_HEALTHZ_SILENCE: bool = os.getenv('NIXE_HEALTHZ_SILENCE', '1') == '1'
PHASH_DB_MARKER: str = os.getenv('PHASH_DB_MARKER', 'PHASH_DB_PINNED')
PHASH_FIRST_DELAY_SECONDS: int = int(os.getenv('PHASH_FIRST_DELAY_SECONDS', '5'))
PHASH_HAMMING_MAX: int = int(os.getenv('PHASH_HAMMING_MAX', '0'))
PHASH_INBOX_THREAD: int = int(os.getenv('PHASH_INBOX_THREAD', '0'))
PHASH_INTERVAL_SECONDS: int = int(os.getenv('PHASH_INTERVAL_SECONDS', '180'))
PHASH_LOG_SCAN_LIMIT: int = int(os.getenv('PHASH_LOG_SCAN_LIMIT', '5000'))
PHASH_WATCH_FIRST_DELAY: str = os.getenv('PHASH_WATCH_FIRST_DELAY', '')
PHASH_WATCH_INTERVAL: int = int(os.getenv('PHASH_WATCH_INTERVAL', '180'))

__all__ = ['BAN_BRAND_NAME', 'BAN_DELETE_SECONDS', 'BAN_DRY_RUN', 'BAN_LOG_CHANNEL_ID', 'LOG_CHANNEL_ID', 'NIXE_HEALTHZ_PATH', 'NIXE_HEALTHZ_SILENCE', 'PHASH_DB_MARKER', 'PHASH_FIRST_DELAY_SECONDS', 'PHASH_HAMMING_MAX', 'PHASH_INBOX_THREAD', 'PHASH_INTERVAL_SECONDS', 'PHASH_LOG_SCAN_LIMIT', 'PHASH_WATCH_FIRST_DELAY', 'PHASH_WATCH_INTERVAL']
